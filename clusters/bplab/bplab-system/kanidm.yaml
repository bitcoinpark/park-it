apiVersion: v1
kind: ConfigMap
metadata:
  name: kanidm-config
  namespace: bplab-system
  labels:
    app.kubernetes.io/name: kanidm
    app.kubernetes.io/instance: kanidm
data:
  server.toml: |
    bindaddress = "[::]:8443"
    ldapbindaddress = "[::]:3636"
    trust_x_forward_for = true
    tls_chain = "/certs/tls.crt"
    tls_key = "/certs/tls.key"
    log_level = "info"
    db_path = "/data/kanidm.db"
    domain = "idm.bitcoinpark.com"
    origin = "https://idm.bitcoinpark.com"
    [online_backup]
    path = "/data/backups"
    schedule = "00 00 * * *"
---
apiVersion: v1
kind: Service
metadata:
  name: kanidm-https
  namespace: bplab-system
  labels:
    app.kubernetes.io/name: kanidm
    app.kubernetes.io/instance: kanidm
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: 8443
  selector:
    app.kubernetes.io/name: kanidm
    app.kubernetes.io/instance: kanidm
  type: ClusterIP
---
apiVersion: traefik.io/v1alpha1
kind: ServersTransport
metadata:
  name: kanidm-https
  namespace: bplab-system
spec:
  insecureSkipVerify: true
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: kanidm
  namespace: bplab-system
  labels:
    app.kubernetes.io/name: kanidm
    app.kubernetes.io/instance: kanidm
spec:
  entryPoints:
  - websecure
  routes:
  - match: Host(`idm.bitcoinpark.com`)
    kind: Rule
    services:
    - name: kanidm-https
      port: 8443
      scheme: https
      serversTransport: kanidm-https
  tls:
    secretName: kanidm-tls
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: kanidm-tls
  namespace: bplab-system
  labels:
    app.kubernetes.io/name: kanidm
    app.kubernetes.io/instance: kanidm
spec:
  dnsNames:
    - idm.bitcoinpark.com
  issuerRef:
    group: cert-manager.io
    kind: ClusterIssuer
    name: letsencrypt-prod
  secretName: kanidm-tls
  usages:
    - digital signature
    - key encipherment
---
apiVersion: v1
kind: Service
metadata:
  name: kanidm-ldaps
  namespace: bplab-system
  labels:
    app.kubernetes.io/name: kanidm
    app.kubernetes.io/instance: kanidm
spec:
  ports:
  - name: ldaps
    port: 3636
    protocol: TCP
    targetPort: 3636
  selector:
    app.kubernetes.io/name: kanidm
    app.kubernetes.io/instance: kanidm
  type: LoadBalancer
  loadBalancerIP: 10.21.0.190
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kanidm
  namespace: bplab-system
  labels:
    app.kubernetes.io/name: kanidm
    app.kubernetes.io/instance: kanidm
spec:
  serviceName: kanidm-https
  selector:
    matchLabels:
      app.kubernetes.io/name: kanidm
      app.kubernetes.io/instance: kanidm
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kanidm
        app.kubernetes.io/instance: kanidm
    spec:
      serviceAccountName: default
      dnsPolicy: Default
      terminationGracePeriodSeconds: 60
      containers:
        - name: kanidm
          image: "kanidm/server:1.5.0"
          imagePullPolicy: IfNotPresent
          env:
            - name: KANIDM_ADMIN_BIND_PATH
              value: "/var/run/kanidmd.sock"
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /status
              port: https
              scheme: HTTPS
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /status
              port: https
              scheme: HTTPS
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          ports:
            - containerPort: 8443
              name: https
            - containerPort: 3636
              name: ldaps
          volumeMounts:
            - name: kanidm-data
              mountPath: /data
            - name: config
              mountPath: /data/server.toml
              subPath: server.toml
              readOnly: true
            - name: certificates
              mountPath: /certs
              readOnly: true
          securityContext:
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              add:
                - NET_BIND_SERVICE
                - CHOWN
                - SETUID
                - SETGID
                - FOWNER
                - DAC_OVERRIDE
              drop:
                - ALL
          resources:
            limits:
              cpu: 50M
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 50Mi
      volumes:
        - name: config
          configMap:
            name: kanidm-config
        - name: certificates
          secret:
            secretName: kanidm-tls
  volumeClaimTemplates:
    - metadata:
        name: kanidm-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 2Gi
        storageClassName: proxmox-data
